import java.util.*;

public class ValidParentheses {

    // Checks if the input string of brackets is valid.
    
    public static boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();
        // Map to hold matching pairs of brackets
        Map<Character, Character> bracketMap = new HashMap<>();
        bracketMap.put(')', '(');
        bracketMap.put('}', '{');
        bracketMap.put(']', '[');

        for (char c : s.toCharArray()) {
            if (bracketMap.containsValue(c)) {
                // If it's an opening bracket, push onto stack
                stack.push(c);
            } else if (bracketMap.containsKey(c)) {
                // If it's a closing bracket
                if (stack.isEmpty() || stack.pop() != bracketMap.get(c)) {
                    return false;
                }
            }
        }
        return stack.isEmpty(); // If stack is empty, all brackets matched
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the string containing brackets: ");
        String input = scanner.nextLine();

        boolean result = isValid(input);  // printing validity of string
        System.out.println("The string is " + (result ? "valid" : "invalid"));
    }
}
